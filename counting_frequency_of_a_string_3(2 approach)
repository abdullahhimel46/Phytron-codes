//easier approach
/*
Sample input
1
abcd h
Sample output
" " aparece 1 time(s)
a aparece 1 time(s)
b aparece 1 time(s)
c aparece 1 time(s)
d aparece 1 time(s)
h aparece 1 time(s)
*/

#include <bits/stdc++.h>
using namespace std;
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int t; cin>>t;
    cin.ignore();
    while(t--){
        
    string s; getline(cin,s);
    map<char,int> freq;
    
    for(int i=0; i<s.size(); i++){
        freq[s[i]]++;
    }
    
    for(auto k: freq){
        if(k.first == ' ')
        cout<<"\" \" aparece "<<k.second<<" time(s)"<<"\n";
        else
        cout<<k.first<<" aparece "<<k.second<<" time(s)"<<"\n";
    }
    }
    return 0; 
}

//naive approach
/*
       'a' - 'a' = 0
       'b' - 'a' = 1
       'c' - 'a' = 2
    =>s[i] - 'a' = idx
    so,  i + 'a' = 97 = a
*/

#include <stdio.h>
int main()
{
    int t;
    int space = 0;
    scanf("%d", &t); 
    
    int freq[26] = {0};
    getchar(); // getchar() is used to consume a whitespace
    
    while(t--) {
        char s[50];
     
    fgets(s, 50, stdin);

        for(int i = 0; s[i] != '\0'; i++){
            int idx = s[i] - 'a';
            freq[idx]++;

        if(s[i] == ' ')
            space++;
        }
    }

    for(int i=0; i< 26; i++){
        if(freq[i] != 0)
            printf("%c -> %d\n",i + 'a' , freq[i]);
    }
 
    printf("spaces: %d",space);
    return 0;
}

/*
Sample Input:
2
abcd efg
abcd h
*/
